使用`through2`模块将`process.stdin`的数据转换为大写，然后输出到
`process.stdout`。

为了获得`through2`模块，运行如下命令：

    npm install through2

一个转换流接受输入数据，并且对数据应用一个操作，最终产生输出数据。

使用`write`和 `end`函数创建一个through流：

    var through = require('through2');
    var stream = through(write, end);

`write`函数被输入数据的每个缓存所调用：

    function write (buffer, encoding, next) {
        // ...
    }

`end`函数当没有更多数据是被调用：

    function end () {
        // ...
    }

在write函数中，调用`this.push()`来产生输出数据，然后当你准备接收下
一个数据块时调用`next()`:

    function write (buffer, encoding, next) {
        this.push('I got some data: ' + buffer + '\n');
        next();
    }

调用`done()`来完成输出：

    function end (done) {
        done();
    }

`write`和`end`都是可选的。

如果`write`没有指定，默认的执行是将数据原封不动传递出去。

如果`end`没有指定，默认的执行是调用`this.push(null)`来关闭输出。

确保将`process.stdin`导入到你的转变流，然后将转变流导出到
`process.stdout`, 如下:

    process.stdin.pipe(tr).pipe(process.stdout);

要将缓存转换为字符串，调用`buffer.toString()`.
